pipeline EconomyPipeline {

          DataExtractor
        -> ExcelFileProcessor
        -> PickTargetSheet
        -> Headers
        -> SelectRange
        -> ProcessGDPData
        -> SaveGDPData;

    SelectRange  
        -> BondTableProcessor
        -> BondDataSaver;

    block DataExtractor oftype HttpExtractor {
        url: "https://thedocs.worldbank.org/en/doc/7d852628d96b9411d43e5d36d5dff941-0050062022/original/Graphs-Chapter-5-02082022.xlsx";
    }

    block ExcelFileProcessor oftype XLSXInterpreter {}

    block PickTargetSheet oftype SheetPicker {
        sheetName: "Figure S5.1.2";
    }

    block SelectRange oftype CellRangeSelector {
        select: range P2:S45;
    }

    block Headers oftype CellWriter {
        at: range P2:S2;  
        write: [
            "Country Code",        
            "Economy",              
            "GDP per Capita",       
            "Bond Issuance Share"   
        ];
    }

    block ProcessGDPData oftype TableInterpreter {
        header: true;
        columns: [
            "Country Code" oftype CountryCodeValidator,  
            "GDP per Capita" oftype GDPValueValidator    
        ];
    }

    block BondTableProcessor oftype TableInterpreter {
        header: true;
        columns: [
            "Country Code" oftype CountryCodeValidator,    
            "Bond Issuance Share" oftype BondShareValidator
        ];
    }

    block SaveGDPData oftype SQLiteLoader {
        table: "gdpPerCapita";
        file: "./country-stats.sqlite";
    }

    block BondDataSaver oftype SQLiteLoader {
        table: "bondIssuance";
        file: "./country-stats.sqlite";
    }
}

constraint IsValidCountryCode on CountryCodeValidator:
    value matches /^[A-Za-z]{3}$/;

constraint IsPositiveDecimal on GDPValueValidator:
    value > 0;

constraint IsDecimalWithinRange on BondShareValidator:
    value >= 0 and value <= 1;


valuetype CountryCodeValidator oftype text {
    constraints: [IsValidCountryCode];
}


valuetype GDPValueValidator oftype decimal {
    constraints: [IsPositiveDecimal];
}


valuetype BondShareValidator oftype decimal {constraints: [IsDecimalWithinRange];}